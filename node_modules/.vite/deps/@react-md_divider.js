import {
  require_jsx_runtime
} from "./chunk-SSJGAJRW.js";
import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-S2TLTWWO.js";

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      function classNames() {
        var classes = "";
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (arg) {
            classes = appendClass(classes, parseValue(arg));
          }
        }
        return classes;
      }
      function parseValue(arg) {
        if (typeof arg === "string" || typeof arg === "number") {
          return arg;
        }
        if (typeof arg !== "object") {
          return "";
        }
        if (Array.isArray(arg)) {
          return classNames.apply(null, arg);
        }
        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
          return arg.toString();
        }
        var classes = "";
        for (var key in arg) {
          if (hasOwn.call(arg, key) && arg[key]) {
            classes = appendClass(classes, key);
          }
        }
        return classes;
      }
      function appendClass(value, newClass) {
        if (!newClass) {
          return value;
        }
        if (value) {
          return value + " " + newClass;
        }
        return value + newClass;
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames;
        });
      } else {
        window.classNames = classNames;
      }
    })();
  }
});

// node_modules/@react-md/divider/es/Divider.js
var import_jsx_runtime14 = __toESM(require_jsx_runtime());
var import_react50 = __toESM(require_react());
var import_classnames5 = __toESM(require_classnames());

// node_modules/@react-md/utils/es/applyRef.js
function applyRef(instance, ref) {
  if (!ref) {
    return;
  }
  if (typeof ref === "function") {
    ref(instance);
  } else if (typeof ref === "object") {
    ref.current = instance;
  }
}

// node_modules/@react-md/utils/es/bem.js
function modify(base, modifier) {
  if (!modifier) {
    return base;
  }
  var hasOwn = Object.prototype.hasOwnProperty;
  return Object.keys(modifier).reduce(function(s, mod) {
    if (hasOwn.call(modifier, mod) && modifier[mod]) {
      s = "".concat(s, " ").concat(base, "--").concat(mod);
    }
    return s;
  }, base);
}
function bem(base) {
  if (true) {
    if (!base) {
      throw new Error("bem requires a base block class but none were provided.");
    }
  }
  return function block5(elementOrModifier, modifier) {
    if (true) {
      if (typeof elementOrModifier !== "string" && modifier) {
        throw new TypeError("bem does not support having two modifier arguments.");
      }
    }
    if (!elementOrModifier) {
      return base;
    }
    if (typeof elementOrModifier !== "string") {
      return modify(base, elementOrModifier);
    }
    return modify("".concat(base, "__").concat(elementOrModifier), modifier);
  };
}

// node_modules/@react-md/utils/es/Dir.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_react = __toESM(require_react());
var context = (0, import_react.createContext)({
  root: true,
  dir: "ltr",
  toggleDir: function() {
    throw new Error("Tried to toggle the current writing direction without initializing the `Dir` component.");
  }
});
var Provider = context.Provider;

// node_modules/@react-md/utils/es/events/useScrollListener.js
var import_react3 = __toESM(require_react());

// node_modules/@react-md/utils/es/useRefCache.js
var import_react2 = __toESM(require_react());

// node_modules/@react-md/utils/es/hover/constants.js
var DEFAULT_HOVER_MODE_VISIBLE_IN_TIME = 1e3;

// node_modules/@react-md/utils/es/hover/HoverModeProvider.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var import_react6 = __toESM(require_react());

// node_modules/@react-md/utils/es/useOnUnmount.js
var import_react4 = __toESM(require_react());

// node_modules/@react-md/utils/es/hover/useHoverModeContext.js
var import_react5 = __toESM(require_react());
var noop = function() {
};
var context2 = (0, import_react5.createContext)({
  visibleInTime: DEFAULT_HOVER_MODE_VISIBLE_IN_TIME,
  enableHoverMode: noop,
  disableHoverMode: noop,
  startDisableTimer: noop
});
var HoverModeContextProvider = context2.Provider;

// node_modules/@react-md/utils/es/hover/useHoverMode.js
var import_react10 = __toESM(require_react());

// node_modules/@react-md/utils/es/mode/UserInteractionModeListener.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var import_react9 = __toESM(require_react());

// node_modules/@react-md/utils/es/mode/useInteractionMode.js
var import_react8 = __toESM(require_react());

// node_modules/@react-md/utils/es/useIsomorphicLayoutEffect.js
var import_react7 = __toESM(require_react());
var useIsomorphicLayoutEffect = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined" ? import_react7.useLayoutEffect : import_react7.useEffect;

// node_modules/@react-md/utils/es/mode/UserInteractionModeListener.js
var modeContext = (0, import_react9.createContext)("mouse");
var parentContext = (0, import_react9.createContext)(false);
var UserInteractionModeProvider = modeContext.Provider;
var ParentProvider = parentContext.Provider;

// node_modules/@react-md/utils/es/keyboardMovement/activeDescendantContext.js
var import_react11 = __toESM(require_react());
var context3 = (0, import_react11.createContext)({
  activeId: "",
  setActiveId: function() {
    throw new Error("ActiveDescendantMovementProvider must be a parent component.");
  }
});
context3.displayName = "ActiveDescendant";
var ActiveDescendantContextProvider = context3.Provider;

// node_modules/@react-md/utils/es/keyboardMovement/ActiveDescendantMovementProvider.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var import_react12 = __toESM(require_react());

// node_modules/@react-md/utils/es/keyboardMovement/KeyboardMovementProvider.js
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var import_react14 = __toESM(require_react());

// node_modules/@react-md/utils/es/keyboardMovement/movementContext.js
var import_react13 = __toESM(require_react());
var noop2 = function() {
  if (true) {
    throw new Error("KeyboardMovementProvider must be a parent component.");
  }
};
var DEFAULT_KEYBOARD_MOVEMENT = {
  incrementKeys: ["ArrowDown"],
  decrementKeys: ["ArrowUp"],
  jumpToFirstKeys: ["Home"],
  jumpToLastKeys: ["End"]
};
var context4 = (0, import_react13.createContext)({
  attach: noop2,
  detach: noop2,
  watching: { current: [] },
  loopable: false,
  searchable: false,
  horizontal: false,
  includeDisabled: false,
  config: { current: DEFAULT_KEYBOARD_MOVEMENT }
});
context4.displayName = "KeyboardMovement";
var KeyboardMovementContextProvider = context4.Provider;

// node_modules/@react-md/utils/es/loop.js
function loop(_a) {
  var value = _a.value, _b = _a.min, min = _b === void 0 ? 0 : _b, max = _a.max, increment = _a.increment, _c = _a.minmax, minmax = _c === void 0 ? false : _c;
  var next = value + (increment ? 1 : -1);
  if (minmax) {
    next = Math.min(max, Math.max(min, next));
  } else if (next > max) {
    next = min;
  } else if (next < min) {
    next = max;
  }
  return next;
}

// node_modules/@react-md/utils/es/keyboardMovement/useKeyboardFocusableElement.js
var import_react15 = __toESM(require_react());

// node_modules/@react-md/utils/es/keyboardMovement/useActiveDescendantFocus.js
var import_react17 = __toESM(require_react());

// node_modules/@react-md/utils/es/keyboardMovement/useKeyboardFocus.js
var import_react16 = __toESM(require_react());

// node_modules/@react-md/utils/es/layout/Grid.js
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var import_react24 = __toESM(require_react());
var import_classnames2 = __toESM(require_classnames());

// node_modules/@react-md/utils/es/sizing/useAppSize.js
var import_react22 = __toESM(require_react());

// node_modules/@react-md/utils/es/sizing/useAppSizeMedia.js
var import_react21 = __toESM(require_react());

// node_modules/@react-md/utils/es/sizing/constants.js
var DEFAULT_DESKTOP_MIN_WIDTH = "".concat(1025 / 16, "em");
var DEFAULT_TABLET_MIN_WIDTH = "".concat(768 / 16, "em");
var DEFAULT_TABLET_MAX_WIDTH = "".concat(1024 / 16, "em");
var DEFAULT_PHONE_MAX_WIDTH = "".concat(767 / 16, "em");
var DEFAULT_DESKTOP_LARGE_MIN_WIDTH = "".concat(1280 / 16, "em");

// node_modules/@react-md/utils/es/sizing/useOrientation.js
var import_react18 = __toESM(require_react());

// node_modules/@react-md/utils/es/sizing/useWidthMediaQuery.js
var import_react20 = __toESM(require_react());

// node_modules/@react-md/utils/es/sizing/useMediaQuery.js
var import_react19 = __toESM(require_react());

// node_modules/@react-md/utils/es/sizing/useAppSizeMedia.js
var DEFAULT_APP_SIZE = {
  isPhone: false,
  isTablet: false,
  isDesktop: true,
  isLargeDesktop: false,
  isLandscape: true
};

// node_modules/@react-md/utils/es/sizing/useAppSize.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __rest = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var AppSizeContext = (0, import_react22.createContext)(__assign(__assign({}, DEFAULT_APP_SIZE), { __initialized: false }));
function useAppSize() {
  var _a = (0, import_react22.useContext)(AppSizeContext), __initialized = _a.__initialized, context6 = __rest(_a, ["__initialized"]);
  if (!__initialized) {
    throw new Error("Unable to get the current `AppSize` from `react-md` because the `AppSizeListener` could not be found when using the `useAppSize` hook. To fix this error, either initialize the `AppSizeListener` component from `@react-md/utils` or the `Configuration` component from `@react-md/layout` near the root of your app.");
  }
  return context6;
}

// node_modules/@react-md/utils/es/layout/GridCell.js
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var import_react23 = __toESM(require_react());
var import_classnames = __toESM(require_classnames());
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var __rest2 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var block = bem("rmd-grid");
var GridCell = (0, import_react23.forwardRef)(function GridCell2(_a, ref) {
  var _b, _c, _d, _e, _f, _g, _h;
  var style = _a.style, className = _a.className, clone = _a.clone, children = _a.children, propColSpan = _a.colSpan, propColStart = _a.colStart, propColEnd = _a.colEnd, propRowSpan = _a.rowSpan, propRowStart = _a.rowStart, propRowEnd = _a.rowEnd, phone = _a.phone, tablet = _a.tablet, desktop = _a.desktop, largeDesktop = _a.largeDesktop, props = __rest2(_a, ["style", "className", "clone", "children", "colSpan", "colStart", "colEnd", "rowSpan", "rowStart", "rowEnd", "phone", "tablet", "desktop", "largeDesktop"]);
  var _j = useAppSize(), isPhone = _j.isPhone, isTablet = _j.isTablet, isDesktop = _j.isDesktop, isLargeDesktop = _j.isLargeDesktop;
  var colSpan = propColSpan;
  var colStart = propColStart;
  var colEnd = propColEnd;
  var rowSpan = propRowSpan;
  var rowStart = propRowStart;
  var rowEnd = propRowEnd;
  var media = isPhone && phone || isTablet && tablet || isLargeDesktop && largeDesktop || isDesktop && desktop;
  if (media) {
    _b = media.rowSpan, rowSpan = _b === void 0 ? propRowSpan : _b, _c = media.rowStart, rowStart = _c === void 0 ? propRowStart : _c, _d = media.rowEnd, rowEnd = _d === void 0 ? propRowEnd : _d, _e = media.colSpan, colSpan = _e === void 0 ? propColSpan : _e, _f = media.colStart, colStart = _f === void 0 ? propColStart : _f, _g = media.colEnd, colEnd = _g === void 0 ? propColEnd : _g;
  }
  var cellStyle = __assign2({ gridColumnStart: colStart, gridColumnEnd: colEnd, gridRowStart: rowStart, gridRowEnd: rowSpan ? "span ".concat(rowSpan) : rowEnd }, style);
  var cellClassName = (0, import_classnames.default)(block("cell", (_h = {}, _h["".concat(colSpan)] = colSpan, _h)), className);
  if (clone && (0, import_react23.isValidElement)(children)) {
    var child = import_react23.Children.only(children);
    return (0, import_react23.cloneElement)(child, {
      style: __assign2(__assign2({}, child.props.style), cellStyle),
      className: (0, import_classnames.default)(cellClassName, child.props.className)
    });
  }
  return (0, import_jsx_runtime6.jsx)("div", __assign2({}, props, { ref, style: cellStyle, className: cellClassName }, { children }));
});

// node_modules/@react-md/utils/es/layout/Grid.js
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
var __rest3 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var GRID_COLUMNS_VAR = "--rmd-grid-cols";
var GRID_GUTTER_VAR = "--rmd-grid-gutter";
var block2 = bem("rmd-grid");
var Grid = (0, import_react24.forwardRef)(function Grid2(_a, ref) {
  var _b;
  var style = _a.style, className = _a.className, children = _a.children, _c = _a.clone, clone = _c === void 0 ? false : _c, _d = _a.cloneStyles, cloneStyles = _d === void 0 ? false : _d, _e = _a.wrapOnly, wrapOnly = _e === void 0 ? false : _e, columns = _a.columns, phoneColumns = _a.phoneColumns, tabletColumns = _a.tabletColumns, desktopColumns = _a.desktopColumns, largeDesktopColumns = _a.largeDesktopColumns, padding = _a.padding, gutter = _a.gutter, minCellWidth = _a.minCellWidth, props = __rest3(_a, ["style", "className", "children", "clone", "cloneStyles", "wrapOnly", "columns", "phoneColumns", "tabletColumns", "desktopColumns", "largeDesktopColumns", "padding", "gutter", "minCellWidth"]);
  var _f = useAppSize(), isPhone = _f.isPhone, isTablet = _f.isTablet, isDesktop = _f.isDesktop, isLargeDesktop = _f.isLargeDesktop;
  var mergedStyle = __assign3(__assign3({ padding: padding !== 0 && padding || void 0, gridTemplateColumns: minCellWidth ? "repeat(auto-fill, minmax(".concat(minCellWidth, ", 1fr))") : void 0 }, style), (_b = {}, _b[GRID_COLUMNS_VAR] = isPhone && phoneColumns || isTablet && tabletColumns || isLargeDesktop && largeDesktopColumns || isDesktop && desktopColumns || columns, _b[GRID_GUTTER_VAR] = gutter, _b));
  var mergedClassName = (0, import_classnames2.default)(block2({ "no-padding": padding === 0 }), className);
  if (cloneStyles && (0, import_react24.isValidElement)(children)) {
    var child = import_react24.Children.only(children);
    return (0, import_react24.cloneElement)(child, {
      style: __assign3(__assign3({}, mergedStyle), child.props.style),
      className: (0, import_classnames2.default)(mergedClassName, child.props.className)
    });
  }
  var content = children;
  if (clone || wrapOnly) {
    content = import_react24.Children.map(children, function(child2) {
      return child2 && (0, import_jsx_runtime7.jsx)(GridCell, __assign3({ clone }, { children: child2 }));
    });
  }
  return (0, import_jsx_runtime7.jsx)("div", __assign3({}, props, { ref, style: mergedStyle, className: mergedClassName }, { children: content }));
});

// node_modules/@react-md/utils/es/layout/GridList.js
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var import_react28 = __toESM(require_react());

// node_modules/@react-md/utils/es/layout/GridListCell.js
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var import_react25 = __toESM(require_react());
var import_classnames3 = __toESM(require_classnames());
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
var __rest4 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var block3 = bem("rmd-grid-list");
var GridListCell = (0, import_react25.forwardRef)(function GridListCell2(_a, ref) {
  var className = _a.className, children = _a.children, _b = _a.square, square = _b === void 0 ? false : _b, _c = _a.clone, clone = _c === void 0 ? false : _c, props = __rest4(_a, ["className", "children", "square", "clone"]);
  var cellClassName = (0, import_classnames3.default)(block3("cell", { square }), className);
  if (clone && (0, import_react25.isValidElement)(children)) {
    var child = import_react25.Children.only(children);
    return (0, import_react25.cloneElement)(child, {
      className: (0, import_classnames3.default)(cellClassName, child.props.className)
    });
  }
  return (0, import_jsx_runtime8.jsx)("div", __assign4({}, props, { ref, className: cellClassName }, { children }));
});

// node_modules/@react-md/utils/es/layout/useGridList.js
var import_react27 = __toESM(require_react());
var import_classnames4 = __toESM(require_classnames());

// node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js
var resizeObservers = [];

// node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js
var hasActiveObservations = function() {
  return resizeObservers.some(function(ro) {
    return ro.activeTargets.length > 0;
  });
};

// node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js
var hasSkippedObservations = function() {
  return resizeObservers.some(function(ro) {
    return ro.skippedTargets.length > 0;
  });
};

// node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js
var msg = "ResizeObserver loop completed with undelivered notifications.";
var deliverResizeLoopError = function() {
  var event;
  if (typeof ErrorEvent === "function") {
    event = new ErrorEvent("error", {
      message: msg
    });
  } else {
    event = document.createEvent("Event");
    event.initEvent("error", false, false);
    event.message = msg;
  }
  window.dispatchEvent(event);
};

// node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js
var ResizeObserverBoxOptions;
(function(ResizeObserverBoxOptions2) {
  ResizeObserverBoxOptions2["BORDER_BOX"] = "border-box";
  ResizeObserverBoxOptions2["CONTENT_BOX"] = "content-box";
  ResizeObserverBoxOptions2["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));

// node_modules/@juggle/resize-observer/lib/utils/freeze.js
var freeze = function(obj) {
  return Object.freeze(obj);
};

// node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js
var ResizeObserverSize = /* @__PURE__ */ function() {
  function ResizeObserverSize2(inlineSize, blockSize) {
    this.inlineSize = inlineSize;
    this.blockSize = blockSize;
    freeze(this);
  }
  return ResizeObserverSize2;
}();

// node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js
var DOMRectReadOnly = function() {
  function DOMRectReadOnly2(x, y, width, height) {
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
    this.top = this.y;
    this.left = this.x;
    this.bottom = this.top + this.height;
    this.right = this.left + this.width;
    return freeze(this);
  }
  DOMRectReadOnly2.prototype.toJSON = function() {
    var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;
    return { x, y, top, right, bottom, left, width, height };
  };
  DOMRectReadOnly2.fromRect = function(rectangle) {
    return new DOMRectReadOnly2(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
  };
  return DOMRectReadOnly2;
}();

// node_modules/@juggle/resize-observer/lib/utils/element.js
var isSVG = function(target) {
  return target instanceof SVGElement && "getBBox" in target;
};
var isHidden = function(target) {
  if (isSVG(target)) {
    var _a = target.getBBox(), width = _a.width, height = _a.height;
    return !width && !height;
  }
  var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;
  return !(offsetWidth || offsetHeight || target.getClientRects().length);
};
var isElement = function(obj) {
  var _a;
  if (obj instanceof Element) {
    return true;
  }
  var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;
  return !!(scope && obj instanceof scope.Element);
};
var isReplacedElement = function(target) {
  switch (target.tagName) {
    case "INPUT":
      if (target.type !== "image") {
        break;
      }
    case "VIDEO":
    case "AUDIO":
    case "EMBED":
    case "OBJECT":
    case "CANVAS":
    case "IFRAME":
    case "IMG":
      return true;
  }
  return false;
};

// node_modules/@juggle/resize-observer/lib/utils/global.js
var global = typeof window !== "undefined" ? window : {};

// node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js
var cache = /* @__PURE__ */ new WeakMap();
var scrollRegexp = /auto|scroll/;
var verticalRegexp = /^tb|vertical/;
var IE = /msie|trident/i.test(global.navigator && global.navigator.userAgent);
var parseDimension = function(pixel) {
  return parseFloat(pixel || "0");
};
var size = function(inlineSize, blockSize, switchSizes) {
  if (inlineSize === void 0) {
    inlineSize = 0;
  }
  if (blockSize === void 0) {
    blockSize = 0;
  }
  if (switchSizes === void 0) {
    switchSizes = false;
  }
  return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);
};
var zeroBoxes = freeze({
  devicePixelContentBoxSize: size(),
  borderBoxSize: size(),
  contentBoxSize: size(),
  contentRect: new DOMRectReadOnly(0, 0, 0, 0)
});
var calculateBoxSizes = function(target, forceRecalculation) {
  if (forceRecalculation === void 0) {
    forceRecalculation = false;
  }
  if (cache.has(target) && !forceRecalculation) {
    return cache.get(target);
  }
  if (isHidden(target)) {
    cache.set(target, zeroBoxes);
    return zeroBoxes;
  }
  var cs = getComputedStyle(target);
  var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();
  var removePadding = !IE && cs.boxSizing === "border-box";
  var switchSizes = verticalRegexp.test(cs.writingMode || "");
  var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || "");
  var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || "");
  var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
  var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
  var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
  var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
  var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
  var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
  var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
  var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
  var horizontalPadding = paddingLeft + paddingRight;
  var verticalPadding = paddingTop + paddingBottom;
  var horizontalBorderArea = borderLeft + borderRight;
  var verticalBorderArea = borderTop + borderBottom;
  var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
  var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
  var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
  var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
  var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
  var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
  var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
  var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
  var boxes = freeze({
    devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
    contentBoxSize: size(contentWidth, contentHeight, switchSizes),
    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)
  });
  cache.set(target, boxes);
  return boxes;
};
var calculateBoxSize = function(target, observedBox, forceRecalculation) {
  var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;
  switch (observedBox) {
    case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:
      return devicePixelContentBoxSize;
    case ResizeObserverBoxOptions.BORDER_BOX:
      return borderBoxSize;
    default:
      return contentBoxSize;
  }
};

// node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js
var ResizeObserverEntry = /* @__PURE__ */ function() {
  function ResizeObserverEntry2(target) {
    var boxes = calculateBoxSizes(target);
    this.target = target;
    this.contentRect = boxes.contentRect;
    this.borderBoxSize = freeze([boxes.borderBoxSize]);
    this.contentBoxSize = freeze([boxes.contentBoxSize]);
    this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);
  }
  return ResizeObserverEntry2;
}();

// node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js
var calculateDepthForNode = function(node) {
  if (isHidden(node)) {
    return Infinity;
  }
  var depth = 0;
  var parent = node.parentNode;
  while (parent) {
    depth += 1;
    parent = parent.parentNode;
  }
  return depth;
};

// node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js
var broadcastActiveObservations = function() {
  var shallowestDepth = Infinity;
  var callbacks2 = [];
  resizeObservers.forEach(function processObserver(ro) {
    if (ro.activeTargets.length === 0) {
      return;
    }
    var entries = [];
    ro.activeTargets.forEach(function processTarget(ot) {
      var entry = new ResizeObserverEntry(ot.target);
      var targetDepth = calculateDepthForNode(ot.target);
      entries.push(entry);
      ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);
      if (targetDepth < shallowestDepth) {
        shallowestDepth = targetDepth;
      }
    });
    callbacks2.push(function resizeObserverCallback() {
      ro.callback.call(ro.observer, entries, ro.observer);
    });
    ro.activeTargets.splice(0, ro.activeTargets.length);
  });
  for (var _i = 0, callbacks_1 = callbacks2; _i < callbacks_1.length; _i++) {
    var callback = callbacks_1[_i];
    callback();
  }
  return shallowestDepth;
};

// node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js
var gatherActiveObservationsAtDepth = function(depth) {
  resizeObservers.forEach(function processObserver(ro) {
    ro.activeTargets.splice(0, ro.activeTargets.length);
    ro.skippedTargets.splice(0, ro.skippedTargets.length);
    ro.observationTargets.forEach(function processTarget(ot) {
      if (ot.isActive()) {
        if (calculateDepthForNode(ot.target) > depth) {
          ro.activeTargets.push(ot);
        } else {
          ro.skippedTargets.push(ot);
        }
      }
    });
  });
};

// node_modules/@juggle/resize-observer/lib/utils/process.js
var process2 = function() {
  var depth = 0;
  gatherActiveObservationsAtDepth(depth);
  while (hasActiveObservations()) {
    depth = broadcastActiveObservations();
    gatherActiveObservationsAtDepth(depth);
  }
  if (hasSkippedObservations()) {
    deliverResizeLoopError();
  }
  return depth > 0;
};

// node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js
var trigger;
var callbacks = [];
var notify = function() {
  return callbacks.splice(0).forEach(function(cb) {
    return cb();
  });
};
var queueMicroTask = function(callback) {
  if (!trigger) {
    var toggle_1 = 0;
    var el_1 = document.createTextNode("");
    var config = { characterData: true };
    new MutationObserver(function() {
      return notify();
    }).observe(el_1, config);
    trigger = function() {
      el_1.textContent = "".concat(toggle_1 ? toggle_1-- : toggle_1++);
    };
  }
  callbacks.push(callback);
  trigger();
};

// node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js
var queueResizeObserver = function(cb) {
  queueMicroTask(function ResizeObserver2() {
    requestAnimationFrame(cb);
  });
};

// node_modules/@juggle/resize-observer/lib/utils/scheduler.js
var watching = 0;
var isWatching = function() {
  return !!watching;
};
var CATCH_PERIOD = 250;
var observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };
var events = [
  "resize",
  "load",
  "transitionend",
  "animationend",
  "animationstart",
  "animationiteration",
  "keyup",
  "keydown",
  "mouseup",
  "mousedown",
  "mouseover",
  "mouseout",
  "blur",
  "focus"
];
var time = function(timeout) {
  if (timeout === void 0) {
    timeout = 0;
  }
  return Date.now() + timeout;
};
var scheduled = false;
var Scheduler = function() {
  function Scheduler2() {
    var _this = this;
    this.stopped = true;
    this.listener = function() {
      return _this.schedule();
    };
  }
  Scheduler2.prototype.run = function(timeout) {
    var _this = this;
    if (timeout === void 0) {
      timeout = CATCH_PERIOD;
    }
    if (scheduled) {
      return;
    }
    scheduled = true;
    var until = time(timeout);
    queueResizeObserver(function() {
      var elementsHaveResized = false;
      try {
        elementsHaveResized = process2();
      } finally {
        scheduled = false;
        timeout = until - time();
        if (!isWatching()) {
          return;
        }
        if (elementsHaveResized) {
          _this.run(1e3);
        } else if (timeout > 0) {
          _this.run(timeout);
        } else {
          _this.start();
        }
      }
    });
  };
  Scheduler2.prototype.schedule = function() {
    this.stop();
    this.run();
  };
  Scheduler2.prototype.observe = function() {
    var _this = this;
    var cb = function() {
      return _this.observer && _this.observer.observe(document.body, observerConfig);
    };
    document.body ? cb() : global.addEventListener("DOMContentLoaded", cb);
  };
  Scheduler2.prototype.start = function() {
    var _this = this;
    if (this.stopped) {
      this.stopped = false;
      this.observer = new MutationObserver(this.listener);
      this.observe();
      events.forEach(function(name) {
        return global.addEventListener(name, _this.listener, true);
      });
    }
  };
  Scheduler2.prototype.stop = function() {
    var _this = this;
    if (!this.stopped) {
      this.observer && this.observer.disconnect();
      events.forEach(function(name) {
        return global.removeEventListener(name, _this.listener, true);
      });
      this.stopped = true;
    }
  };
  return Scheduler2;
}();
var scheduler = new Scheduler();
var updateCount = function(n) {
  !watching && n > 0 && scheduler.start();
  watching += n;
  !watching && scheduler.stop();
};

// node_modules/@juggle/resize-observer/lib/ResizeObservation.js
var skipNotifyOnElement = function(target) {
  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === "inline";
};
var ResizeObservation = function() {
  function ResizeObservation2(target, observedBox) {
    this.target = target;
    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;
    this.lastReportedSize = {
      inlineSize: 0,
      blockSize: 0
    };
  }
  ResizeObservation2.prototype.isActive = function() {
    var size2 = calculateBoxSize(this.target, this.observedBox, true);
    if (skipNotifyOnElement(this.target)) {
      this.lastReportedSize = size2;
    }
    if (this.lastReportedSize.inlineSize !== size2.inlineSize || this.lastReportedSize.blockSize !== size2.blockSize) {
      return true;
    }
    return false;
  };
  return ResizeObservation2;
}();

// node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js
var ResizeObserverDetail = /* @__PURE__ */ function() {
  function ResizeObserverDetail2(resizeObserver, callback) {
    this.activeTargets = [];
    this.skippedTargets = [];
    this.observationTargets = [];
    this.observer = resizeObserver;
    this.callback = callback;
  }
  return ResizeObserverDetail2;
}();

// node_modules/@juggle/resize-observer/lib/ResizeObserverController.js
var observerMap = /* @__PURE__ */ new WeakMap();
var getObservationIndex = function(observationTargets, target) {
  for (var i = 0; i < observationTargets.length; i += 1) {
    if (observationTargets[i].target === target) {
      return i;
    }
  }
  return -1;
};
var ResizeObserverController = function() {
  function ResizeObserverController2() {
  }
  ResizeObserverController2.connect = function(resizeObserver, callback) {
    var detail = new ResizeObserverDetail(resizeObserver, callback);
    observerMap.set(resizeObserver, detail);
  };
  ResizeObserverController2.observe = function(resizeObserver, target, options) {
    var detail = observerMap.get(resizeObserver);
    var firstObservation = detail.observationTargets.length === 0;
    if (getObservationIndex(detail.observationTargets, target) < 0) {
      firstObservation && resizeObservers.push(detail);
      detail.observationTargets.push(new ResizeObservation(target, options && options.box));
      updateCount(1);
      scheduler.schedule();
    }
  };
  ResizeObserverController2.unobserve = function(resizeObserver, target) {
    var detail = observerMap.get(resizeObserver);
    var index = getObservationIndex(detail.observationTargets, target);
    var lastObservation = detail.observationTargets.length === 1;
    if (index >= 0) {
      lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);
      detail.observationTargets.splice(index, 1);
      updateCount(-1);
    }
  };
  ResizeObserverController2.disconnect = function(resizeObserver) {
    var _this = this;
    var detail = observerMap.get(resizeObserver);
    detail.observationTargets.slice().forEach(function(ot) {
      return _this.unobserve(resizeObserver, ot.target);
    });
    detail.activeTargets.splice(0, detail.activeTargets.length);
  };
  return ResizeObserverController2;
}();

// node_modules/@juggle/resize-observer/lib/ResizeObserver.js
var ResizeObserver = function() {
  function ResizeObserver2(callback) {
    if (arguments.length === 0) {
      throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
    }
    if (typeof callback !== "function") {
      throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
    }
    ResizeObserverController.connect(this, callback);
  }
  ResizeObserver2.prototype.observe = function(target, options) {
    if (arguments.length === 0) {
      throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
    }
    if (!isElement(target)) {
      throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
    }
    ResizeObserverController.observe(this, target, options);
  };
  ResizeObserver2.prototype.unobserve = function(target) {
    if (arguments.length === 0) {
      throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
    }
    if (!isElement(target)) {
      throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
    }
    ResizeObserverController.unobserve(this, target);
  };
  ResizeObserver2.prototype.disconnect = function() {
    ResizeObserverController.disconnect(this);
  };
  ResizeObserver2.toString = function() {
    return "function ResizeObserver () { [polyfill code] }";
  };
  return ResizeObserver2;
}();

// node_modules/@react-md/utils/es/useEnsuredRef.js
var import_react26 = __toESM(require_react());
function useEnsuredRef(propRef) {
  var ref = (0, import_react26.useRef)(null);
  var refHandler = (0, import_react26.useCallback)(function(instance) {
    applyRef(instance, propRef);
    ref.current = instance;
  }, [propRef]);
  return [ref, refHandler];
}

// node_modules/@react-md/utils/es/sizing/useResizeObserver.js
var __assign5 = function() {
  __assign5 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign5.apply(this, arguments);
};
var __read = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function isHeightChange(prevSize, nextSize) {
  return !prevSize || prevSize.height !== nextSize.height || prevSize.scrollHeight !== nextSize.scrollHeight;
}
function isWidthChange(prevSize, nextSize) {
  return !prevSize || prevSize.width !== nextSize.width || prevSize.scrollWidth !== nextSize.scrollWidth;
}
var sharedObserver;
var subscriptions = [];
function init() {
  if (sharedObserver || typeof document === "undefined") {
    return;
  }
  sharedObserver = new ResizeObserver(function(entries) {
    var _loop_1 = function(i2) {
      var entry = entries[i2];
      var currentSubscriptions = subscriptions.filter(function(_a2) {
        var target = _a2.target;
        return target === entry.target;
      });
      if (!currentSubscriptions.length) {
        return { value: void 0 };
      }
      var _a = entry.contentRect, height = _a.height, width = _a.width;
      var _b = entry.target, scrollHeight = _b.scrollHeight, scrollWidth = _b.scrollWidth;
      var nextSize = {
        height,
        width,
        scrollHeight,
        scrollWidth
      };
      for (var j = 0; j < currentSubscriptions.length; j += 1) {
        var subscription = currentSubscriptions[j];
        var handler = subscription.handler, prevSize = subscription.prevSize, disableHeight = subscription.disableHeight, disableWidth = subscription.disableWidth;
        var isNewHeight = isHeightChange(prevSize, nextSize);
        var isNewWidth = isWidthChange(prevSize, nextSize);
        if (isNewHeight && !disableHeight || isNewWidth && !disableWidth) {
          subscription.prevSize = nextSize;
          handler(__assign5(__assign5({}, nextSize), { element: entry.target }));
        }
      }
    };
    for (var i = 0; i < entries.length; i += 1) {
      var state_1 = _loop_1(i);
      if (typeof state_1 === "object")
        return state_1.value;
    }
  });
}
function subscribe(target, onResize, disableHeight, disableWidth) {
  var exists = subscriptions.find(function(sub) {
    return sub.target === target;
  });
  subscriptions.push({
    target,
    handler: onResize,
    disableWidth,
    disableHeight,
    prevSize: void 0
  });
  if (!exists) {
    sharedObserver === null || sharedObserver === void 0 ? void 0 : sharedObserver.observe(target);
  }
}
function unsubscribe(target, onResize, disableHeight, disableWidth) {
  var i = subscriptions.findIndex(function(sub) {
    return sub.target === target && sub.handler === onResize && sub.disableWidth === disableWidth && sub.disableHeight === disableHeight;
  });
  if (i !== -1) {
    subscriptions.splice(i, 1);
  }
  var remaining = subscriptions.some(function(sub) {
    return sub.target === target;
  });
  if (!remaining) {
    sharedObserver === null || sharedObserver === void 0 ? void 0 : sharedObserver.unobserve(target);
  }
}
function useResizeObserver(onResize, options) {
  if (options === void 0) {
    options = {};
  }
  var propRef = options.ref, _a = options.disableWidth, disableWidth = _a === void 0 ? false : _a, _b = options.disableHeight, disableHeight = _b === void 0 ? false : _b;
  var _c = __read(useEnsuredRef(propRef), 2), ref = _c[0], refHandler = _c[1];
  useIsomorphicLayoutEffect(function() {
    var target = ref.current;
    if (disableHeight && disableWidth || !target) {
      return;
    }
    init();
    subscribe(target, onResize, disableHeight, disableWidth);
    return function() {
      unsubscribe(target, onResize, disableHeight, disableWidth);
    };
  }, [disableHeight, disableWidth, onResize]);
  return [ref, refHandler];
}

// node_modules/@react-md/utils/es/layout/scrollbarSize.js
var cached = {
  height: void 0,
  width: void 0
};
function scrollbarSize(type, forced) {
  if (type === void 0) {
    type = "width";
  }
  if (forced === void 0) {
    forced = false;
  }
  if (typeof window === "undefined") {
    return -1;
  }
  var value = cached[type];
  if (!forced && typeof value === "number") {
    return value;
  }
  var outer = document.createElement("div");
  outer.style.visibility = "hidden";
  outer.style.overflow = "scroll";
  document.body.appendChild(outer);
  var inner = document.createElement("div");
  outer.appendChild(inner);
  var offsetType = type === "width" ? "offsetWidth" : "offsetHeight";
  value = outer[offsetType] - inner[offsetType];
  cached[type] = value;
  document.body.removeChild(outer);
  return value;
}

// node_modules/@react-md/utils/es/layout/useGridList.js
var __assign6 = function() {
  __assign6 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign6.apply(this, arguments);
};
var __read2 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var CELL_SIZE_VAR = "--rmd-cell-size";
var CELL_MARGIN_VAR = "--rmd-cell-margin";
var DEFAULT_GRID_LIST_MAX_CELL_SIZE = 150;
var DEFAULT_GRID_LIST_PADDING = 16;
var context5 = (0, import_react27.createContext)({
  columns: -1,
  cellWidth: -1
});
var GridListSizeProvider = context5.Provider;
if (true) {
  context5.displayName = "GridListSizeProvider";
}
function useGridList(_a) {
  var _b;
  var _c = _a === void 0 ? {} : _a, propRef = _c.ref, style = _c.style, className = _c.className, cellMargin = _c.cellMargin, defaultSize = _c.defaultSize, _d = _c.maxCellSize, maxCellSize = _d === void 0 ? DEFAULT_GRID_LIST_MAX_CELL_SIZE : _d, _e = _c.disableHeight, disableHeight = _e === void 0 ? false : _e, _f = _c.disableWidth, disableWidth = _f === void 0 ? false : _f, _g = _c.containerPadding, containerPadding = _g === void 0 ? DEFAULT_GRID_LIST_PADDING : _g;
  var _h = __read2(useEnsuredRef(propRef), 2), ref = _h[0], mergedRef = _h[1];
  var _j = __read2((0, import_react27.useState)(defaultSize || { columns: -1, cellWidth: maxCellSize }), 2), gridSize = _j[0], setGridSize = _j[1];
  var recalculate = (0, import_react27.useCallback)(function() {
    var target = ref.current;
    if (!target) {
      return;
    }
    var width = target.getBoundingClientRect().width;
    width -= containerPadding;
    if (target.offsetHeight < target.scrollHeight) {
      width -= scrollbarSize("width");
    }
    var columns = Math.ceil(width / maxCellSize);
    setGridSize({ cellWidth: width / columns, columns });
  }, [containerPadding, maxCellSize, ref]);
  var _k = __read2(useResizeObserver(recalculate, {
    ref: mergedRef,
    disableHeight,
    disableWidth
  }), 2), refHandler = _k[1];
  var mergedStyle = __assign6(__assign6({}, style), (_b = {}, _b[CELL_SIZE_VAR] = "".concat(gridSize.cellWidth, "px"), _b));
  if (cellMargin) {
    mergedStyle[CELL_MARGIN_VAR] = cellMargin;
  }
  return [
    {
      ref: refHandler,
      style: mergedStyle,
      className: (0, import_classnames4.default)("rmd-grid-list", className)
    },
    gridSize
  ];
}

// node_modules/@react-md/utils/es/layout/GridList.js
var __assign7 = function() {
  __assign7 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign7.apply(this, arguments);
};
var __rest5 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __read3 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var isRenderFunction = function(children) {
  return typeof children === "function";
};
var GridList = (0, import_react28.forwardRef)(function GridList2(_a, forwardedRef) {
  var style = _a.style, className = _a.className, children = _a.children, _b = _a.clone, clone = _b === void 0 ? false : _b, _c = _a.wrapOnly, wrapOnly = _c === void 0 ? false : _c, cellMargin = _a.cellMargin, defaultSize = _a.defaultSize, _d = _a.maxCellSize, maxCellSize = _d === void 0 ? DEFAULT_GRID_LIST_MAX_CELL_SIZE : _d, _e = _a.containerPadding, containerPadding = _e === void 0 ? DEFAULT_GRID_LIST_PADDING : _e, _f = _a.disableHeightObserver, disableHeightObserver = _f === void 0 ? false : _f, _g = _a.disableWidthObserver, disableWidthObserver = _g === void 0 ? false : _g, props = __rest5(_a, ["style", "className", "children", "clone", "wrapOnly", "cellMargin", "defaultSize", "maxCellSize", "containerPadding", "disableHeightObserver", "disableWidthObserver"]);
  var _h = __read3(useGridList({
    ref: forwardedRef,
    style,
    className,
    cellMargin,
    defaultSize,
    maxCellSize,
    containerPadding,
    disableHeight: disableHeightObserver,
    disableWidth: disableWidthObserver
  }), 2), gridListProps = _h[0], gridSize = _h[1];
  var content = null;
  if (isRenderFunction(children)) {
    content = children(gridSize);
  } else if (clone || wrapOnly) {
    content = import_react28.Children.map(children, function(child) {
      return child && (0, import_jsx_runtime9.jsx)(GridListCell, __assign7({ clone }, { children: child }));
    });
  } else {
    content = children;
  }
  return (0, import_jsx_runtime9.jsx)(GridListSizeProvider, __assign7({ value: gridSize }, { children: (0, import_jsx_runtime9.jsx)("div", __assign7({}, props, gridListProps, { children: content })) }));
});

// node_modules/@react-md/utils/es/positioning/findSizingContainer.js
function findSizingContainer(el) {
  if (!el) {
    return null;
  }
  if (/(tree|list)item/.test(el.getAttribute("role") || "")) {
    var content = el.querySelector(".rmd-tree-item__content, .rmd-item-text");
    if (content) {
      return content;
    }
  } else if (el.getAttribute("type") === "file") {
    var label = document.querySelector('[for="'.concat(el.id, '"]'));
    if (label) {
      return label;
    }
  }
  var data = el.getAttribute("data-sizing-selector");
  if (data) {
    var content = el.querySelector(data);
    if (content) {
      return content;
    }
    if (true) {
      throw new Error("Unable to find a child element using the `data-sizing-selector`");
    }
  }
  return el;
}

// node_modules/@react-md/utils/es/scrollIntoView.js
function scrollIntoView(container, element) {
  element = findSizingContainer(element);
  if (!container || !element) {
    return;
  }
  var offsetTop = element.offsetTop;
  if (element.offsetParent !== container) {
    offsetTop -= container.offsetTop;
  }
  var elementBottom = offsetTop + element.offsetHeight;
  var containerBottom = container.offsetHeight + container.scrollTop;
  if (elementBottom > containerBottom) {
    container.scrollTop = elementBottom - container.offsetHeight;
  } else if (offsetTop < container.scrollTop) {
    container.scrollTop = offsetTop;
  }
}

// node_modules/@react-md/utils/es/search/useKeyboardSearch.js
var import_react30 = __toESM(require_react());

// node_modules/@react-md/utils/es/useTempValue.js
var import_react29 = __toESM(require_react());

// node_modules/@react-md/utils/es/sizing/AppSizeListener.js
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var import_react31 = __toESM(require_react());

// node_modules/@react-md/utils/es/sizing/useResizeListener.js
var import_react32 = __toESM(require_react());

// node_modules/@react-md/utils/es/useCloseOnOutsideClick.js
var import_react33 = __toESM(require_react());

// node_modules/@react-md/utils/es/useDropzone.js
var import_react34 = __toESM(require_react());

// node_modules/@react-md/utils/es/useInterval.js
var import_react36 = __toESM(require_react());

// node_modules/@react-md/utils/es/useToggle.js
var import_react35 = __toESM(require_react());

// node_modules/@react-md/utils/es/useTimeout.js
var import_react37 = __toESM(require_react());

// node_modules/@react-md/utils/es/wia-aria/constants.js
var FOCUSABLE_ELEMENTS = ["BUTTON", "TEXTAREA", "SELECT"];
var BASE_FOCUSABLE_ELEMENTS = 'a[href],area[href],input:not([disabled]):not([type="hidden"])';
var BASE_FOCUSABLE_QUERY = FOCUSABLE_ELEMENTS.reduce(function(queryString, element) {
  return "".concat(queryString, ",").concat(element, ":not([disabled])");
}, BASE_FOCUSABLE_ELEMENTS);
var PROGRAMATICALLY_FOCUSABLE = "".concat(BASE_FOCUSABLE_QUERY, ",[tabindex]");
var TAB_FOCUSABLE = "".concat(PROGRAMATICALLY_FOCUSABLE, ':not([tabindex="-1"])');

// node_modules/@react-md/utils/es/wia-aria/FocusContainer.js
var import_jsx_runtime11 = __toESM(require_jsx_runtime());
var import_react41 = __toESM(require_react());

// node_modules/@react-md/utils/es/wia-aria/useFocusOnMount.js
var import_react38 = __toESM(require_react());

// node_modules/@react-md/utils/es/wia-aria/getFocusableElements.js
function getFocusableElements(container, programatic) {
  if (programatic === void 0) {
    programatic = false;
  }
  return Array.from(container.querySelectorAll(programatic ? PROGRAMATICALLY_FOCUSABLE : TAB_FOCUSABLE));
}

// node_modules/@react-md/utils/es/wia-aria/isFocusable.js
function isFocusable(element, type) {
  if (type === void 0) {
    type = "programmatic";
  }
  return "matches" in element && element.matches(type === "programmatic" ? PROGRAMATICALLY_FOCUSABLE : TAB_FOCUSABLE);
}

// node_modules/@react-md/utils/es/wia-aria/focusElementWithin.js
var __read4 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function focusElementWithin(container, focus, programmatic, preventScroll, elements) {
  var _a;
  if (programmatic === void 0) {
    programmatic = false;
  }
  if (preventScroll === void 0) {
    preventScroll = false;
  }
  if (!elements || !elements.length) {
    elements = getFocusableElements(container, programmatic);
  }
  var el;
  switch (focus) {
    case "first":
      _a = __read4(elements, 1), el = _a[0];
      break;
    case "last":
      el = elements[elements.length - 1];
      break;
    default:
      el = container.querySelector(focus);
  }
  if (!el && isFocusable(container, "programmatic")) {
    el = container;
  }
  if (!el) {
    throw new Error("Unable to find a focusable element");
  }
  el.focus({ preventScroll });
  if (!preventScroll && container !== document) {
    scrollIntoView(container, el);
  }
}

// node_modules/@react-md/utils/es/wia-aria/getInstance.js
function getInstance(refOrInstance) {
  var instance = null;
  if (refOrInstance) {
    if (refOrInstance instanceof HTMLElement) {
      instance = refOrInstance;
    } else {
      instance = refOrInstance.current;
    }
  }
  return instance;
}

// node_modules/@react-md/utils/es/wia-aria/useFocusOnMount.js
function useFocusOnMount(refOrInstance, defaultFocus, preventScroll, programmatic, disabled) {
  if (preventScroll === void 0) {
    preventScroll = false;
  }
  if (programmatic === void 0) {
    programmatic = false;
  }
  if (disabled === void 0) {
    disabled = false;
  }
  (0, import_react38.useEffect)(function() {
    if (disabled) {
      return;
    }
    var frame = window.requestAnimationFrame(function() {
      var instance = getInstance(refOrInstance);
      if (!instance) {
        return;
      }
      instance.focus({ preventScroll });
      focusElementWithin(instance, defaultFocus, programmatic, preventScroll);
    });
    return function() {
      window.cancelAnimationFrame(frame);
    };
  }, [defaultFocus, disabled, refOrInstance, programmatic, preventScroll]);
}

// node_modules/@react-md/utils/es/wia-aria/usePreviousFocus.js
var import_react39 = __toESM(require_react());
function usePreviousFocus(disabled, fallback, previousElement) {
  if (fallback === void 0) {
    fallback = void 0;
  }
  if (previousElement === void 0) {
    previousElement = null;
  }
  var options = (0, import_react39.useRef)({
    disabled,
    fallback
  });
  (0, import_react39.useEffect)(function() {
    options.current = {
      disabled,
      fallback
    };
  });
  (0, import_react39.useEffect)(function() {
    if (disabled) {
      return;
    }
    var element = previousElement || document.activeElement;
    var menu = element.closest('[role="menu"]');
    var menuButton = null;
    if (menu) {
      menuButton = document.getElementById(menu.id.replace(/-menu$/, ""));
      if (!menuButton) {
        var labelledBy = menu.getAttribute("aria-labelledby") || "";
        var query = labelledBy.split(" ").map(function(id) {
          return "#".concat(id, "[tabindex]");
        }).join(",");
        menuButton = query ? document.querySelector(query) : null;
      }
    }
    return function() {
      var _a = options.current, fallback2 = _a.fallback, disabled2 = _a.disabled;
      if (disabled2) {
        return;
      }
      if (menu && menuButton && !previousElement && !fallback2 && !document.contains(element) && document.contains(menuButton)) {
        menuButton.focus();
        return;
      }
      var el = element;
      if (!document.contains(el)) {
        el = previousElement && document.contains(previousElement) ? previousElement : null;
      }
      if (!el && fallback2) {
        switch (typeof fallback2) {
          case "string":
            el = document.querySelector(fallback2);
            break;
          case "function":
            el = fallback2();
            break;
          default:
            el = fallback2;
        }
      }
      if (el && !document.contains(el)) {
        el = null;
      }
      if (el) {
        el.focus();
      }
    };
  }, []);
}

// node_modules/@react-md/utils/es/wia-aria/useTabFocusWrap.js
var import_react40 = __toESM(require_react());
function useTabFocusWrap(_a) {
  var _b = _a.disabled, disabled = _b === void 0 ? false : _b, _c = _a.disableFocusCache, disableFocusCache = _c === void 0 ? false : _c, onKeyDown = _a.onKeyDown;
  var focusables = (0, import_react40.useRef)([]);
  var handleKeyDown = (0, import_react40.useCallback)(function(event) {
    if (onKeyDown) {
      onKeyDown(event);
    }
    if (event.key !== "Tab") {
      return;
    }
    if (disableFocusCache || !focusables.current.length) {
      focusables.current = getFocusableElements(event.currentTarget);
    }
    var elements = focusables.current;
    var l = elements.length;
    if (l === 0) {
      return;
    }
    if (l === 1) {
      event.preventDefault();
      elements[0].focus();
    } else if (elements[0] === event.target && event.shiftKey) {
      event.preventDefault();
      elements[l - 1].focus();
    } else if (elements[l - 1] === event.target && !event.shiftKey) {
      event.preventDefault();
      elements[0].focus();
    }
  }, [onKeyDown, disableFocusCache]);
  return disabled ? onKeyDown : handleKeyDown;
}

// node_modules/@react-md/utils/es/wia-aria/FocusContainer.js
var __assign8 = function() {
  __assign8 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign8.apply(this, arguments);
};
var __rest6 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __read5 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var FocusContainer = (0, import_react41.forwardRef)(function FocusContainer2(_a, forwardedRef) {
  var children = _a.children, onKeyDown = _a.onKeyDown, _b = _a.component, Component = _b === void 0 ? "div" : _b, _c = _a.defaultFocus, defaultFocus = _c === void 0 ? "first" : _c, _d = _a.disableFocusCache, disableFocusCache = _d === void 0 ? false : _d, _e = _a.disableFocusOnMount, disableFocusOnMount = _e === void 0 ? false : _e, _f = _a.disableFocusOnMountScroll, disableFocusOnMountScroll = _f === void 0 ? false : _f, _g = _a.disableFocusOnUnmount, disableFocusOnUnmount = _g === void 0 ? false : _g, _h = _a.disableTabFocusWrap, disableTabFocusWrap = _h === void 0 ? false : _h, _j = _a.unmountFocusFallback, unmountFocusFallback = _j === void 0 ? "" : _j, props = __rest6(_a, ["children", "onKeyDown", "component", "defaultFocus", "disableFocusCache", "disableFocusOnMount", "disableFocusOnMountScroll", "disableFocusOnUnmount", "disableTabFocusWrap", "unmountFocusFallback"]);
  var _k = __read5(useEnsuredRef(forwardedRef), 2), ref = _k[0], refHandler = _k[1];
  usePreviousFocus(disableFocusOnUnmount, unmountFocusFallback);
  useFocusOnMount(ref, defaultFocus, disableFocusOnMountScroll, false, disableFocusOnMount);
  var handleKeyDown = useTabFocusWrap({
    disabled: disableTabFocusWrap,
    disableFocusCache,
    onKeyDown
  });
  return (0, import_jsx_runtime11.jsx)(Component, __assign8({}, props, { onKeyDown: handleKeyDown, ref: refHandler }, { children }));
});

// node_modules/@react-md/utils/es/wia-aria/movement/types.js
var IncrementMovementKey;
(function(IncrementMovementKey2) {
  IncrementMovementKey2["ArrowUp"] = "ArrowUp";
  IncrementMovementKey2["ArrowDown"] = "ArrowDown";
  IncrementMovementKey2["ArrowLeft"] = "ArrowLeft";
  IncrementMovementKey2["ArrowRight"] = "ArrowRight";
  IncrementMovementKey2["PageDown"] = "PageDown";
  IncrementMovementKey2["PageUp"] = "PageUp";
  IncrementMovementKey2["ShiftArrowUp"] = "Shift+ArrowUp";
  IncrementMovementKey2["ShiftArrowDown"] = "Shift+ArrowDown";
  IncrementMovementKey2["ShiftArrowLeft"] = "Shift+ArrowLeft";
  IncrementMovementKey2["ShiftArrowRight"] = "Shift+ArrowRight";
  IncrementMovementKey2["AltArrowDown"] = "Alt+ArrowDown";
  IncrementMovementKey2["AltArrowUp"] = "Alt+ArrowUp";
  IncrementMovementKey2["AltArrowLeft"] = "Alt+ArrowLeft";
  IncrementMovementKey2["AltArrowRight"] = "Alt+ArrowRight";
  IncrementMovementKey2["AltPageDown"] = "Alt+PageDown";
  IncrementMovementKey2["AltPageUp"] = "Alt+PageUp";
  IncrementMovementKey2["ControlArrowDown"] = "Control+ArrowDown";
  IncrementMovementKey2["ControlArrowUp"] = "Control+ArrowUp";
})(IncrementMovementKey || (IncrementMovementKey = {}));
var JumpMovementKey;
(function(JumpMovementKey2) {
  JumpMovementKey2["Home"] = "Home";
  JumpMovementKey2["End"] = "End";
  JumpMovementKey2["AltHome"] = "Alt+Home";
  JumpMovementKey2["AltEnd"] = "Alt+End";
  JumpMovementKey2["ControlHome"] = "Control+Home";
  JumpMovementKey2["ControlEnd"] = "Control+End";
  JumpMovementKey2["ControlShiftHome"] = "Control+Shift+Home";
  JumpMovementKey2["ControlShiftEnd"] = "Control+Shift+End";
})(JumpMovementKey || (JumpMovementKey = {}));

// node_modules/@react-md/utils/es/wia-aria/movement/presets.js
var __assign9 = function() {
  __assign9 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign9.apply(this, arguments);
};
var VERTICAL_MENU = {
  loopable: true,
  searchable: true,
  incrementKeys: [IncrementMovementKey.ArrowDown],
  decrementKeys: [IncrementMovementKey.ArrowUp],
  jumpToFirstKeys: [JumpMovementKey.Home],
  jumpToLastKeys: [JumpMovementKey.End]
};
var HORIZONTAL_MENU = __assign9(__assign9({}, VERTICAL_MENU), { incrementKeys: [IncrementMovementKey.ArrowRight], decrementKeys: [IncrementMovementKey.ArrowLeft] });
var VERTICAL_LISTBOX = __assign9(__assign9({}, VERTICAL_MENU), { loopable: false });
var HORIZONTAL_LISTBOX = __assign9(__assign9({}, HORIZONTAL_MENU), { loopable: false });
var VERTICAL_COMBOBOX = {
  incrementKeys: [IncrementMovementKey.ArrowDown],
  decrementKeys: [IncrementMovementKey.ArrowUp],
  // don't want to be able to jump since home and end should do default behavior
  // in text field
  jumpToFirstKeys: [],
  jumpToLastKeys: [],
  searchable: false
};
var HORIZONTAL_COMBOBOX = {
  incrementKeys: [IncrementMovementKey.ArrowRight],
  decrementKeys: [IncrementMovementKey.ArrowLeft],
  // don't want to be able to jump since home and end should do default behavior
  // in text field
  jumpToFirstKeys: [],
  jumpToLastKeys: [],
  searchable: false
};
var VERTICAL_TREE = {
  incrementKeys: [IncrementMovementKey.ArrowDown],
  decrementKeys: [IncrementMovementKey.ArrowUp],
  jumpToFirstKeys: [JumpMovementKey.Home, JumpMovementKey.ControlShiftHome],
  jumpToLastKeys: [JumpMovementKey.End, JumpMovementKey.ControlShiftEnd],
  loopable: true,
  searchable: true
};
var HORIZONTAL_TREE = {
  incrementKeys: [IncrementMovementKey.ArrowRight],
  decrementKeys: [IncrementMovementKey.ArrowLeft],
  jumpToFirstKeys: [JumpMovementKey.Home, JumpMovementKey.ControlShiftHome],
  jumpToLastKeys: [JumpMovementKey.End, JumpMovementKey.ControlShiftEnd],
  loopable: true,
  searchable: true
};
var HORIZONTAL_TABS = {
  incrementKeys: [IncrementMovementKey.ArrowRight],
  decrementKeys: [IncrementMovementKey.ArrowLeft],
  jumpToFirstKeys: [JumpMovementKey.Home],
  jumpToLastKeys: [JumpMovementKey.End],
  loopable: true,
  searchable: false
};
var VERTICAL_TABS = {
  incrementKeys: [IncrementMovementKey.ArrowDown],
  decrementKeys: [IncrementMovementKey.ArrowUp],
  jumpToFirstKeys: [JumpMovementKey.Home],
  jumpToLastKeys: [JumpMovementKey.End],
  loopable: true,
  searchable: false
};

// node_modules/@react-md/utils/es/wia-aria/movement/useKeyboardMovement.js
var import_react42 = __toESM(require_react());

// node_modules/@react-md/utils/es/wia-aria/movement/useActiveDescendantMovement.js
var import_react43 = __toESM(require_react());

// node_modules/@react-md/utils/es/wia-aria/movement/useFocusMovement.js
var import_react44 = __toESM(require_react());

// node_modules/@react-md/utils/es/wia-aria/radio/RadioGroup.js
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
var import_react46 = __toESM(require_react());
var import_react47 = __toESM(require_react());

// node_modules/@react-md/utils/es/wia-aria/tryToSubmitRelatedForm.js
function tryToSubmitRelatedForm(event) {
  var _a, _b;
  if (event.key !== "Enter") {
    return false;
  }
  event.preventDefault();
  event.stopPropagation();
  var form = (_b = (_a = event.currentTarget) === null || _a === void 0 ? void 0 : _a.closest) === null || _b === void 0 ? void 0 : _b.call(_a, "form");
  var submit = form === null || form === void 0 ? void 0 : form.querySelector('[type="submit"]');
  if (!submit && (form === null || form === void 0 ? void 0 : form.id)) {
    submit = document.querySelector('[type="submit"][form="'.concat(form.id, '"]'));
  }
  submit === null || submit === void 0 ? void 0 : submit.click();
  return true;
}

// node_modules/@react-md/utils/es/wia-aria/radio/RadioWidget.js
var import_jsx_runtime12 = __toESM(require_jsx_runtime());
var import_react45 = __toESM(require_react());
var __assign10 = function() {
  __assign10 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign10.apply(this, arguments);
};
var __rest7 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var RadioWidget = (0, import_react45.forwardRef)(function RadioGroupRadio(_a, ref) {
  var checked = _a.checked, children = _a.children, props = __rest7(_a, ["checked", "children"]);
  return (0, import_jsx_runtime12.jsx)("span", __assign10({}, props, { "aria-checked": checked, ref, role: "radio" }, { children }));
});

// node_modules/@react-md/utils/es/wia-aria/radio/utils.js
function getRadioItemValue(value) {
  return typeof value === "string" ? value : value.value;
}
var defaultGetRadioStyle = function(item) {
  return item.style;
};
var defaultGetRadioClassName = function(item) {
  return item.className;
};

// node_modules/@react-md/utils/es/wia-aria/radio/RadioGroup.js
var __assign11 = function() {
  __assign11 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign11.apply(this, arguments);
};
var __rest8 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __read6 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var RadioGroup = (0, import_react47.forwardRef)(function RadioGroup2(_a, ref) {
  var id = _a.id, _b = _a.getRadioStyle, getRadioStyle = _b === void 0 ? defaultGetRadioStyle : _b, _c = _a.getRadioClassName, getRadioClassName = _c === void 0 ? defaultGetRadioClassName : _c, items = _a.items, currentValue = _a.value, onBlur = _a.onBlur, onFocus = _a.onFocus, onClick = _a.onClick, onChange = _a.onChange, onKeyDown = _a.onKeyDown, props = __rest8(_a, ["id", "getRadioStyle", "getRadioClassName", "items", "value", "onBlur", "onFocus", "onClick", "onChange", "onKeyDown"]);
  var refs = items.map(function() {
    return (0, import_react47.createRef)();
  });
  var _d = __read6((0, import_react47.useState)(false), 2), focused = _d[0], setFocused = _d[1];
  var handleBlur = (0, import_react47.useCallback)(function(event) {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);
    setFocused(false);
  }, [onBlur]);
  var handleFocus = (0, import_react47.useCallback)(function(event) {
    onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);
    setFocused(true);
  }, [onFocus]);
  var handleClick = (0, import_react47.useCallback)(function(event) {
    var _a2, _b2;
    onClick === null || onClick === void 0 ? void 0 : onClick(event);
    var radio = (_a2 = event.target) === null || _a2 === void 0 ? void 0 : _a2.closest('[role="radio"]');
    var index = radio ? refs.findIndex(function(_a3) {
      var current = _a3.current;
      return radio === current;
    }) : -1;
    if (index !== -1) {
      onChange(getRadioItemValue(items[index]));
      (_b2 = refs[index].current) === null || _b2 === void 0 ? void 0 : _b2.focus();
    }
  }, [onChange, onClick, refs, items]);
  var handleKeyDown = (0, import_react47.useCallback)(function(event) {
    var _a2, _b2;
    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);
    if (tryToSubmitRelatedForm(event)) {
      return;
    }
    if (![" ", "ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown"].includes(event.key)) {
      return;
    }
    var radio = (_a2 = event.target) === null || _a2 === void 0 ? void 0 : _a2.closest('[role="radio"]');
    if (!radio) {
      return;
    }
    event.preventDefault();
    event.stopPropagation();
    if (event.key === " ") {
      radio.click();
      return;
    }
    var increment = event.key === "ArrowRight" || event.key === "ArrowDown";
    var index = refs.findIndex(function(_a3) {
      var current = _a3.current;
      return current === radio;
    });
    if (index !== -1) {
      var nextIndex = loop({
        value: index,
        max: items.length - 1,
        increment
      });
      (_b2 = refs[nextIndex].current) === null || _b2 === void 0 ? void 0 : _b2.focus();
      onChange(getRadioItemValue(items[nextIndex]));
    }
  }, [onChange, onKeyDown, refs, items]);
  var focusable = (0, import_react47.useMemo)(function() {
    return items.some(function(value) {
      return getRadioItemValue(value) === currentValue;
    });
  }, [currentValue, items]);
  return (0, import_jsx_runtime13.jsx)("span", __assign11({}, props, { id, ref, role: "radiogroup", onBlur: handleBlur, onFocus: handleFocus, onClick: handleClick, onKeyDown: handleKeyDown, tabIndex: -1 }, { children: items.map(function(item, i) {
    var props2;
    var value;
    var checked = false;
    var children;
    var itemStyle;
    var itemClassName;
    if (typeof item === "string") {
      value = item;
      checked = currentValue === value;
      children = value;
      itemStyle = getRadioStyle({ index: i, checked, value: item });
      itemClassName = getRadioClassName({
        index: i,
        checked,
        value: item
      });
    } else {
      value = item.value, children = item.children, props2 = __rest8(item, ["value", "children"]);
      checked = currentValue === value;
      itemStyle = getRadioStyle(__assign11({ index: i, checked }, item));
      itemClassName = getRadioClassName(__assign11({ index: i, checked }, item)) || void 0;
      if (typeof children === "undefined") {
        children = value;
      }
    }
    return (0, import_react46.createElement)(RadioWidget, __assign11({}, props2, { key: value, id: "".concat(id, "-").concat(i + 1), ref: refs[i], style: itemStyle, className: itemClassName, checked, tabIndex: checked || !focused && !focusable ? 0 : -1 }), children);
  }) }));
});

// node_modules/@react-md/utils/es/wia-aria/useCloseOnEscape.js
var import_react48 = __toESM(require_react());

// node_modules/@react-md/utils/es/wia-aria/useScrollLock.js
var import_react49 = __toESM(require_react());

// node_modules/@react-md/divider/es/Divider.js
var __assign12 = function() {
  __assign12 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign12.apply(this, arguments);
};
var __rest9 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var block4 = bem("rmd-divider");
var Divider = (0, import_react50.forwardRef)(function Divider2(_a, ref) {
  var _b = _a.inset, inset = _b === void 0 ? false : _b, _c = _a.vertical, vertical = _c === void 0 ? false : _c, _d = _a.role, role = _d === void 0 ? "separator" : _d, className = _a.className, props = __rest9(_a, ["inset", "vertical", "role", "className"]);
  var Component = vertical ? "div" : "hr";
  return (0, import_jsx_runtime14.jsx)(Component, __assign12({}, props, { ref, role, className: (0, import_classnames5.default)(block4({ inset: !vertical && inset, vertical }), className) }));
});

// node_modules/@react-md/divider/es/useVerticalDividerHeight.js
var import_react51 = __toESM(require_react());
var __assign13 = function() {
  __assign13 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign13.apply(this, arguments);
};
var __read7 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error) {
    e = { error };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useVerticalDividerHeight(_a) {
  var ref = _a.ref, style = _a.style, maxHeight = _a.maxHeight;
  var _b = __read7((0, import_react51.useState)(void 0), 2), height = _b[0], setHeight = _b[1];
  var refCallback = (0, import_react51.useCallback)(function(instance) {
    applyRef(instance, ref);
    if (!instance || !instance.parentElement || maxHeight === 0) {
      return;
    }
    var height2 = instance.parentElement.offsetHeight;
    if (maxHeight <= 1) {
      setHeight(height2 * maxHeight);
    } else {
      setHeight(Math.min(height2, maxHeight));
    }
  }, [maxHeight, ref]);
  return {
    ref: refCallback,
    style: maxHeight <= 0 ? style : __assign13(__assign13({}, style), { height })
  };
}

// node_modules/@react-md/divider/es/VerticalDivider.js
var import_jsx_runtime15 = __toESM(require_jsx_runtime());
var import_react52 = __toESM(require_react());
var __assign14 = function() {
  __assign14 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign14.apply(this, arguments);
};
var __rest10 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var VerticalDivider = (0, import_react52.forwardRef)(function VerticalDivider2(_a, ref) {
  var style = _a.style, _b = _a.maxHeight, maxHeight = _b === void 0 ? 1 : _b, props = __rest10(_a, ["style", "maxHeight"]);
  var heightProps = useVerticalDividerHeight({
    ref,
    style,
    maxHeight
  });
  return (0, import_jsx_runtime15.jsx)(Divider, __assign14({}, props, heightProps, { vertical: true }));
});
export {
  Divider,
  VerticalDivider,
  useVerticalDividerHeight
};
/*! Bundled license information:

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)
*/
//# sourceMappingURL=@react-md_divider.js.map
