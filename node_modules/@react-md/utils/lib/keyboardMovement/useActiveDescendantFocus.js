"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useActiveDescendantFocus = void 0;
var react_1 = require("react");
var useKeyboardFocus_1 = require("./useKeyboardFocus");
/**
 * @see {@link ActiveDescendantMovementProvider} for an example
 * @internal
 * @remarks \@since 5.0.0
 */
function useActiveDescendantFocus(_a) {
    if (_a === void 0) { _a = {}; }
    var _b = _a.defaultActiveId, defaultActiveId = _b === void 0 ? "" : _b, options = __rest(_a, ["defaultActiveId"]);
    var _c = __read((0, react_1.useState)(defaultActiveId), 2), activeId = _c[0], setActiveId = _c[1];
    return __assign(__assign({}, (0, useKeyboardFocus_1.useKeyboardFocus)(__assign(__assign({}, options), { onFocusChange: function (element) {
            setActiveId(element.id);
        }, getDefaultFocusIndex: function (elements) {
            if (!activeId) {
                return -1;
            }
            return elements.findIndex(function (_a) {
                var id = _a.id;
                return id === activeId;
            });
        } }))), { "aria-activedescendant": activeId, providerProps: {
            activeId: activeId,
            setActiveId: setActiveId,
        } });
}
exports.useActiveDescendantFocus = useActiveDescendantFocus;
//# sourceMappingURL=useActiveDescendantFocus.js.map