import type { ReactElement, ReactNode } from "react";
import type { KeyboardMovementBehavior, KeyboardMovementConfiguration } from "./types";
/**
 * @remarks \@since 5.0.0
 */
export interface KeyboardMovementProviderProps extends KeyboardMovementBehavior, KeyboardMovementConfiguration {
    children: ReactNode;
}
/**
 * @example
 * Main Usage
 * ```tsx
 * function Example() {
 *   return (
 *     <KeyboardMovementProvider>
 *       <CustomKeyboardFocusWidget />
 *     </KeyboardMovementProvider>
 *   );
 * }
 *
 * function CustomKeyboardFocusWidget() {
 *   const { focusIndex: _focusIndex, ...eventHandlers } = useKeyboardFocus();
 *   return (
 *     <div {...eventHandlers}>
 *       <FocusableChild />
 *       <FocusableChild />
 *       <FocusableChild />
 *       <FocusableChild />
 *     </div>
 *   );
 * }
 *
 * function FocusableChild() {
 *   const refCallback = useKeyboardFocusableElement()
 *
 *   return <div role="menuitem" tabIndex={-1} ref={refCallback}>Content</div>;
 * }
 * ```
 *
 * @remarks \@since 5.0.0
 */
export declare function KeyboardMovementProvider({ children, loopable, searchable, horizontal, includeDisabled, incrementKeys: propIncrementKeys, decrementKeys: propDecrementKeys, jumpToFirstKeys: propJumpToFirstKeys, jumpToLastKeys: propJumpToLastKeys, }: KeyboardMovementProviderProps): ReactElement;
