import { createContext, useContext } from "react";
/**
 * @remarks \@since 5.0.0
 * @internal
 */
var noop = function () {
    if (process.env.NODE_ENV !== "production") {
        throw new Error("KeyboardMovementProvider must be a parent component.");
    }
};
/**
 * Most custom keyboard functionality use these keys.
 *
 * @remarks \@since 5.0.0
 * @internal
 */
export var DEFAULT_KEYBOARD_MOVEMENT = {
    incrementKeys: ["ArrowDown"],
    decrementKeys: ["ArrowUp"],
    jumpToFirstKeys: ["Home"],
    jumpToLastKeys: ["End"],
};
/**
 * @remarks \@since 5.1.2
 * @internal
 */
export var DEFAULT_LTR_KEYBOARD_MOVEMENT = {
    incrementKeys: ["ArrowRight"],
    decrementKeys: ["ArrowLeft"],
    jumpToFirstKeys: ["Home"],
    jumpToLastKeys: ["End"],
};
/**
 * @remarks \@since 5.1.2
 * @internal
 */
export var DEFAULT_RTL_KEYBOARD_MOVEMENT = {
    incrementKeys: ["ArrowLeft"],
    decrementKeys: ["ArrowRight"],
    jumpToFirstKeys: ["Home"],
    jumpToLastKeys: ["End"],
};
/**
 * @remarks \@since 5.0.0
 * @internal
 */
var context = createContext({
    attach: noop,
    detach: noop,
    watching: { current: [] },
    loopable: false,
    searchable: false,
    horizontal: false,
    includeDisabled: false,
    config: { current: DEFAULT_KEYBOARD_MOVEMENT },
});
context.displayName = "KeyboardMovement";
/**
 * @remarks \@since 5.0.0
 * @internal
 */
export var KeyboardMovementContextProvider = context.Provider;
/**
 * @remarks \@since 5.0.0
 * @internal
 */
export function useKeyboardFocusContext() {
    return useContext(context);
}
//# sourceMappingURL=movementContext.js.map